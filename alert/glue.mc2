//
// Description : This retrieve all unaknowledged alerts
// Input :  read_token (For alert storage)
//          alert_filter (Map that filter alerts)
//          end (Instant of the last alert to be taken into account)
//          depth (Period to watch)
//          tick_filter (Macro used to keep only certain tick of an alert (the last one for exemple))
//          notify_parameters (Notify macro parameters as an array)
//          notify_macro (Notify macro to trigger for every non acknoledged alert)
// Output : [ GTS ] (One per alert with unaknowledged ticks) 
//
<%
  'notify_macro' STORE
  'notify_parameters' STORE
  'tick_filter' STORE
  'depth' STORE
  'end' STORE
  'alert_filter' STORE
  'token' STORE
  
  // Fetch alerts
  [ $token '~alert.(level|ack|details)' $alert_filter $end $depth ] FETCH

  // Filter differents parts of the alerts into differents vars
  DUP DUP
  // Here we compact the level part of the alert to only keep changing state
  [ SWAP [] 'alert.level' filter.byclass ] FILTER @MC2Bank/gt/compact_time 'level' STORE
  [ SWAP [] 'alert.details' filter.byclass ] FILTER 'details' STORE
  [ SWAP [] 'alert.ack' filter.byclass ] FILTER 'ack' STORE

  []
  $level
  // Running through every alert
  <%
    LABELS 'selector' STORE // Retrieve alert selector
    // Filter unacknoledged ticks
    [
      // Get alert ack time serie
      [ $ack [] $selector filter.bylabels ] FILTER DUP SIZE <% 0 == %> <% [ NEWGTS 'alert.ack' RENAME $selector RELABEL ] APPEND %> IFT 
      // Get alert level alert time serie
      [ $level [] $selector filter.bylabels ] FILTER
      []
      op.negmask
    ] APPLY APPEND
  %> FOREACH

  $tick_filter EVAL

  // Running through every alert
  <%
    'acks' STORE
    $acks LABELS 'selector' STORE
    $acks TICKS
    // Running through every ticks
    <%
      'tick' STORE
      { 
        'tick' $tick 
        'alert' $selector 
        'details' [ $details [] $selector filter.bylabels ] FILTER 0 NEWGTS @MC2Bank/list_map/get_or_default $tick ATTICK 4 GET
      } $notify_parameters LIST-> DROP $notify_macro EVAL
    %> FOREACH
  %> FOREACH
%>
