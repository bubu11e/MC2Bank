//
// Description : This retrieve all unaknowledged alerts
// Input :  read_token (For alert storage)
//          alert_filter (Map that filter alerts)
//          end (Instant of the last alert to be taken into account)
//          depth (Period to watch)
//          notify_parameters (Notify macro parameters as an array)
//          notify_macro (Notify macro to trigger for every non acknoledged alert)
// Output : [ GTS ] (One per alert with unaknowledged ticks) 
//
<%
  'notify_macro' STORE
  'notify_parameters' STORE
  'depth' STORE
  'end' STORE
  'alert_filter' STORE
  'token' STORE
  
  // Fetch alerts
  [ $token '~alert.(level|ack|details)' $alert_filter $end $depth ] FETCH

  // Filter differents parts of the alerts into differents vars
  DUP DUP
  // Here we compact the level part of the alert to only keep changing state
  [ SWAP [] 'alert.level' filter.byclass ] FILTER @MC2Bank/gt/compact_time 'level' STORE
  [ SWAP [] 'alert.details' filter.byclass ] FILTER 'details' STORE
  [ SWAP [] 'alert.ack' filter.byclass ] FILTER 'ack' STORE

  $level
  // Running through every alert
  <%
    'selected_level' STORE
    // Retrieve alert selector
    $selected_level LABELS '.app' REMOVE DROP 'selector' STORE
    // Retrieve details matching selector
    [ $details [] $selector filter.bylabels ] FILTER 
      DUP SIZE <% 0 == %> <% DROP NEWGTS 'alert.details' RENAME $selector RELABEL %> <% 0 GET %> IFTE 'selected_details' STORE
    // Retrieve acks matching selector
    [ $ack [] $selector filter.bylabels ] FILTER
      DUP SIZE <% 0 == %> <% DROP NEWGTS 'alert.ack' RENAME $selector RELABEL %> <% 0 GET %> IFTE 'selected_ack' STORE
    
    // Filter unacknoledged ticks
    [
      // Get alert ack time serie
      [ $selected_ack ]
      [ $selected_level ]
      []
      op.negmask
    ] APPLY
    
    TICKS
    
    // Running through every ticks
    <%
      'tick' STORE
      { 
        'tick' $tick 
        'alert' $selector 
        'level' $selected_level $tick ATTICK 4 GET
        'details' $selected_details $tick ATTICK 4 GET // Retrieve the value at the tick we are interested in
                  <% DUP ISNULL %> <% DROP '{}' %> IFT // If the value if null (no details info), we replace by an empty json object
                  JSON-> // Deserialization
      } $notify_parameters LIST-> DROP $notify_macro EVAL
    %> FOREACH
  %> FOREACH
%>
