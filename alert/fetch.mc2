//
// Description : This retrieve all informations about the specified alerts
// Input :  read_token (For alert storage)
//          alert_filter (Map that filter alerts)
//          end (Instant of the last alert to be taken into account)
//          depth (Period to watch)
// Output : [ GTS ] 
//
<%
  DUP TYPEOF 'LONG'   == ASSERT 'mc2bank.alert.fetch.depth'  STORE
  DUP TYPEOF 'LONG'   == ASSERT 'mc2bank.alert.fetch.end'    STORE
  DUP TYPEOF 'MAP'    == ASSERT 'mc2bank.alert.fetch.filter' STORE
  DUP TYPEOF 'STRING' == ASSERT 'mc2bank.alert.fetch.token'  STORE

  // Fetch alerts time series
  [
    $mc2bank.alert.fetch.token
    '~alert.(levels|details|acks)'
    $mc2bank.alert.fetch.filter
    $mc2bank.alert.fetch.end
    $mc2bank.alert.fetch.depth
  ] FETCH

  { 'levels' [] 'details' [] 'acks' [] } 'mc2bank.alert.fetch.result' STORE
  
  <%
    'mc2bank.alert.fetch.gts' STORE
    
    <% $mc2bank.alert.fetch.gts NAME 'alert.levels' == %>
      <% $mc2bank.alert.fetch.result 'levels' GET $mc2bank.alert.fetch.gts +! DROP %>
    <% $mc2bank.alert.fetch.gts NAME 'alert.details' == %>
      <%
        $mc2bank.alert.fetch.result 'details' GET $mc2bank.alert.fetch.gts +! DROP
      %>
    <% $mc2bank.alert.fetch.gts NAME 'alert.acks' == %>
      <%
        $mc2bank.alert.fetch.result 'acks' GET $mc2bank.alert.fetch.gts +! DROP
      %>
    <% 'not handled serie name in alert system' FAIL %>
    3
    SWITCH
  %> FOREACH
  
  $mc2bank.alert.fetch.result
%>
