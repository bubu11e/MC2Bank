//
// Description : This retrieve all informations about the specified alerts
// Input :  read_token (For alert storage)
//          alert_filter (Map that filter alerts)
//          end (Instant of the last alert to be taken into account)
//          depth (Period to watch)
// Output : [ GTS ] 
//
<%
  DUP TYPEOF 'STRING' == ASSERT 'mc2bank.alert.fetch.subscriber' STORE
  DUP TYPEOF 'LONG'   == ASSERT 'mc2bank.alert.fetch.depth'      STORE
  DUP TYPEOF 'LONG'   == ASSERT 'mc2bank.alert.fetch.end'        STORE
  DUP TYPEOF 'MAP'    == ASSERT 'mc2bank.alert.fetch.filter'     STORE
  DUP TYPEOF 'STRING' == ASSERT 'mc2bank.alert.fetch.token'      STORE

  // Fetch alerts time series
  [
    $mc2bank.alert.fetch.token
    '~alert.(levels|details|acks)'
    $mc2bank.alert.fetch.filter
    $mc2bank.alert.fetch.end
    $mc2bank.alert.fetch.depth
  ] FETCH

  { 'levels' [] 'details' {} 'acks' {} } 'mc2bank.alert.fetch.result' STORE
  
  <%
    'mc2bank.alert.fetch.gts' STORE

    <% $mc2bank.alert.fetch.gts NAME 'alert.levels' == %>
    <%
      $mc2bank.alert.fetch.result 'levels' GET $mc2bank.alert.fetch.gts +! DROP
      CONTINUE
    %>
    IFT

    <% $mc2bank.alert.fetch.gts NAME 'alert.details' == %>
    // Store details as a map (key is a hash of the alert name)
    <%
      $mc2bank.alert.fetch.result 'details' GET $mc2bank.alert.fetch.gts DUP LABELS @MC2Bank/alert/hash PUT DROP
      CONTINUE
    %>
    IFT

    <% $mc2bank.alert.fetch.gts NAME 'alert.acks' == $mc2bank.alert.fetch.gts LABELS '.subscriber' GET ISNULL ! && %>
    // Store acks as a map (key is a hash of the alert name)
    <%
      <% $mc2bank.alert.fetch.gts LABELS '.subscriber' GET $mc2bank.alert.fetch.subscriber == %>
      <% $mc2bank.alert.fetch.result 'acks' GET $mc2bank.alert.fetch.gts DUP LABELS @MC2Bank/alert/hash PUT DROP %>
      IFT
    %> IFT
  %> FOREACH
  
  $mc2bank.alert.fetch.result
%>
